-- Description of the wishbone interface for the wb_dma_interface core

peripheral {
   name = "FMC ADC/DAC interface registers";
   description = "FMC ADC/DAC interface";
   -- Prefix for all generated ports
   prefix = "fmc150";
   -- Name of the vhdl entity to be generated
   hdl_entity = "wb_fmc150_port";
   
   -- Flags Pulse
   reg {
      name = "Input Flags for Pulsing Registers";
      prefix = "flgs_pulse";
      
      field {
         name = "Update ADC delay";
         description = "write 1: pulse ADC delay register.\
         write 0: no effect";
         
         --prefix = "start";
         -- Pulse to start
         type = MONOSTABLE;		
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };
	};

   -- Input Flags
   reg {
      name = "Input Flags for FMC150";
      prefix = "flgs_in";
      
      field {
         name = "SPI Read/Write flag";
         description = "write 1: write to SPI. \
         write 0: read from SPI";
         prefix = "spi_rw";
	     type = BIT;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };     

      field {
         name = "External Clock for ADC";
         description = "write 1: external clock for ADC. \
         write 0: internal clock for ADC";
         prefix = "ext_clk";
	     type = BIT;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };     
	};

   -- Address
   reg {
      name = "Address for Chips on FMC150";
      prefix = "addr";
      
      field {
         name = "SPI address";
         description = "Address of internal register";
         --prefix = "addr";
	     type = SLV;
         size = 16;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };       
	};

   -- Data In
   reg {
      name = "Data In for Chips on FMC150";
      prefix = "data_in";
      
      field {
         name = "Data In for FMC150";
         description = "Data to internal chip register";
         --prefix = "data";
	     type = SLV;
         size = 32;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };       
	};

   -- Chipselect
   reg {
      name = "Chipselect for Chips on FMC150";
      prefix = "cs";
      
      field {
         name = "Chipselect for cdce72010";
         description = "write 1: select chip cdce72010 for operation.\
            write 0: no effect";
         prefix = "cdce72010";
	     type = BIT;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };      

      field {
         name = "Chipselect for ads62p49";
         description = "write 1: select chip ads62p49 for operation.\
            write 0: no effect";
         prefix = "ads62p49";
	     type = BIT;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };  

      field {
         name = "Chipselect for dac3283";
         description = "write 1: select chip dac3283 for operation.\
         write 0: no effect";
         prefix = "dac3283";
	     type = BIT;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };  

      field {
         name = "Chipselect for amc7823";
         description = "write 1: select chip amc7823 for operation.\
         write 0: no effect";
         prefix = "amc7823";
	     type = BIT;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };   
	};

   -- ADC delay
   reg {
      name = "ADC Delay";
      prefix = "adc_dly";
      
      field {
         name = "ADC Strobe delay";
         description = "write the strobe delay";
         prefix = "str";
	     type = SLV;
         size = 5;
         align = 8;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };   

      field {
         name = "ADC Channel A delay";
         description = "write the channel A delay";
         prefix = "cha";
	     type = SLV;
         size = 5;
         align = 8;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };     

      field {
         name = "ADC Strobe delay";
         description = "write the channel B delay";
         prefix = "chb";
	     type = SLV;
         size = 5;
         align = 8;
         --clock = "clk_100Mhz_i";
         access_bus = READ_WRITE;
         access_dev = READ_ONLY;
      };         
	};
    
    -- I don't think the below is true anymore. Check!
    -- The following registers are within the clk_100Mhz_i domain.
    -- Therefore, in order to read it from the bus, we need
    -- to synchronize them to clk_wb_i (wishbone control clock) domain.
    -- Note that clk_wb_i must be connected to the same clock as clk_sys_i.
    -- It is just a diferent name to the same port, to avoid naming
    -- conflicts as generated by wbgen2.

   -- Data Out
   reg {
      name = "Data Out From Chips on FMC150";
      prefix = "data_out";
      
      field {
         name = "Data out from FMC150";
         description = "Data from internal chip register";
         --prefix = "data";
	       type = SLV;
         size = 32;
         --clock = "clk_wb_i";
         access_bus = READ_ONLY;
         access_dev = WRITE_ONLY;
      };       
	};

   -- Flags out
   reg {
      name = "Flags out from Chips on FMC150";
      prefix = "flgs_out";
      
      field {
         name = "SPI Busy";
         description = "read 1: spi busy.\
            read 0: spi idle";
         prefix = "spi_busy";
	       type = BIT;
         --clock = "clk_wb_i";
         access_bus = READ_ONLY;
         access_dev = WRITE_ONLY;
      };      

      field {
         name = "CDCE72010 PLL Status";
         description = "read 1: PLL locked.\
            read 0: PLL not locked";
         prefix = "pll_status";
         type = BIT;
         --clock = "clk_100Mhz";
         --clock = "clk_wb_i";
         access_bus = READ_ONLY;
         access_dev = WRITE_ONLY;
      };  

      field {
         name = "FPGA ADC clock locked";
         description = "read 1: FPGA ADC PLL locked.\
            read 0: FPGA ADC PLL not locked";
         prefix = "adc_clk_locked";
         type = BIT;
         --clock = "clk_wb_i";
         access_bus = READ_ONLY;
         access_dev = WRITE_ONLY;
      };  

      field {
         name = "FMC present";
         description = "read 1: FMC present.\
            read 0: FMC not present";
         prefix = "fmc_prst";
         type = BIT;
         --clock = "clk_100Mhz";
         --clock = "clk_wb_i";
         access_bus = READ_ONLY;
         access_dev = WRITE_ONLY;
      };   
	};

};
